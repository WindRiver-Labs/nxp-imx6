	 i.MX6 UltraLite 14x14 EVK Board Support Package

1. About this document
======================

This document describes common and non-hardware specific information.
Please refer to README.hardware for hardware specific information.

Dependencies
------------
This layer depends on the oe-core version supplied with Wind River
Linux and the wr-kernel layer.

Maintenance
-----------
This layer is maintained by Wind River Systems, Inc.
Contact <support@windriver.com> or your support representative for more
information on submitting changes.

Building the nxp-imx6 layer
---------------------------
This layer and wr-kernel layer should be added to bblayers.conf. This
is done automatically when using the Wind River configure wrapper.

License
-------
Copyright (C) 2021 Wind River Systems, Inc.

Source code included in the tree for individual recipes is under the LICENSE
stated in the associated recipe (.bb file) unless otherwise stated.

The metadata is under the following license unless otherwise stated.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

2. BSP Kernel and Distros
=========================

The following table summarizes the valid Wind River Linux distros for this BSP.
'Y' in each content cell stands for supported; 'N' stands for not supported:

  +--------------+-------------+-------------+-------------+
  | valid/distro |   wrlinux   | wrlinux-cgl | wrlinux-ovp |
  +--------------+-------------+-------------+-------------+
  |    valid     |      Y      |      N      |      N      |
  +--------------+-------------+-------------+-------------+

For the supported kernel type for this BSP, please check the TARGET_SUPPORTED_KTYPES
by running 'bitbake -e virtual/kernel | grep "^TARGET_SUPPORTED_KTYPES="'.

Note: The preempt-rt ktype is not available for this BSP/Machine at this time.


3. Board Specific Patches
=========================
To get a list of patches applied to the kernel specific to this BSP,
along with patch descriptions, use git to see what changed on the default
kernel (git whatchanged <kernel_type>..<bsp_name>). For example:

	# cd tmp-glibc/work-shared/nxp-imx6/kernel-source
	# git whatchanged standard/base..


4. Boot Instructions
====================

4.1 MMC/SD Boot
---------------
Please refer to section 6 "Creating Partitioned Images(WIC)" in this document to
make a bootable MMC/SD card.

4.2 NFS Root File System
------------------------

4.2.1 Prepare Kernel, DTB, NFS and TFTP servers
-----------------------------------------------
The files in the following example can be found in <buildprj>/tmp-glibc/deploy/images/nxp-imx6
and are copied to the export directory of the TFTP server.

4.2.2 Download kernel
---------------------
	For i.MX6 UltraLite:
	# tftpboot 0x80800000 zImage

4.2.3 Download DTB
------------------
	For i.MX6 UltraLite:
	tftpboot 0x83000000 imx6ul-14x14-evk.dtb

4.2.4 Set bootargs and boot the system
--------------------------------------
	For i.MX6 UltraLite:
	# setenv bootargs console=ttymxc0,115200 root=/dev/nfs rw \
                 nfsroot=<nfs server>:<nfs root>,v3,tcp \
                 ip=<target IP>::<gateway>:<netmask>::eth0:off \
	#bootz 0x80800000 - 0x83000000

5. Features
===========
5.1 Static PM
-------------

The debug UART can be set as a wakeup source with:
	# echo enabled > /sys/class/tty/ttymxc0/power/wakeup
	# echo mem > /sys/power/state

5.2 CPU frequency
------------------

CPU frequency scaling allows the clock speed of the CPU to be changed on the fly.

	# echo powersave > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
	# cat /proc/cpuinfo

5.3 ANATOP thermal
-------------------

	To check current CPU temperature
	# cd /sys/class/thermal/thermal_zone0
	# cat temp
	39821
	# cat trip_point_0_type
	passive
	# cat trip_point_0_temp
	95000

5.4 USB feature
---------------

5.4.1 USB OTG Usage and verification
------------------------------------

1. Verify the OTG device mode

Plug in cable B and connect to the host machine.

Board configuration:

        # ifconfig usb0 192.168.1.10

Host machine configuration:

        # sudo ifconfig usb0 192.168.1.100
        # ping 192.168.1.10 -c 2
        PING 192.168.1.10 (192.168.1.10) 56(84) bytes of data.
        64 bytes from 192.168.1.10: icmp_req=1 ttl=64 time=2.06 ms
        64 bytes from 192.168.1.10: icmp_req=2 ttl=64 time=0.286 ms
        ...

2. Switch to OTG host mode

Replace cable B with cable A.

5.5 Audio
---------
Play audio messages:

        # aplay -Dhw:0,0 stereo1644s.wav


6. Creating Partitioned Images(WIC)
===================================

User can use the OpenEmbedded Image Creator, wic, to create the properly
partitioned image on a SD card. The wic command
generates partitioned images from existing OpenEmbedded build artifacts.
User can refer to the below URL to get more WIC details:

https://www.yoctoproject.org/docs/2.6/mega-manual/mega-manual.html#creating-partitioned-images-using-wic

This BSP supports disk images for SD card.
After building the project, user will get a WIC image under the directory
tmp-glibc/deploy/images/<bsp name>/ ,such as:

tmp-glibc/deploy/images/nxp-imx6/wrlinux-image-std-nxp-imx6.wic

Then user can write the output image to a SD card:

Since this BSP doesn't have a firmware to read the uboot from a partition table,
WIC image only contains kernel, dtb and rootfs. We still need to write U-boot
image to SD card directly by "dd" command.

7.1 Burn images to SD card
--------------------------

To burn uboot and WIC images to SD card, user need to execute command:
For i.mx6ul:
# dd if=wrlinux-image-std-nxp-imx6.wic of=/dev/your_sd_dev

Prepare the bootloader image, user can get it from www.nxp.com
# dd if=u-boot-imx6ul14x14evk_sd.imx of=/dev/your_sd_dev bs=1k seek=<x> conv=fsync

Note: seek = "1"

7.2 Set uboot env
-----------------

Board can boot automatically by set the below uboot environment variables:

For i.mx6ul
=> setenv bootfile zImage; setenv fdtfile imx6ul-14x14-evk.dtb;  setenv loadaddr 0x80800000; setenv fdtaddr 0x83000000;
=> setenv bootargs 'root=/dev/mmcblk1p2 rw rootdelay=5 console=ttymxc0,115200n8'
=> setenv bootcmd 'fatload mmc 1:1 $loadaddr $bootfile; fatload mmc 1:1 $fdtaddr $fdtfile; bootz $loadaddr - $fdtaddr';
=> saveenv; run bootcmd;
